function displayComments(e){(new Posts).get("data.json").then((e=>{loadData(e)})).catch((e=>console.log(e)))}function loadData(e){console.log(e);const t=document.querySelector("#current-user__avatar"),n=(e.currentUser.image.png,e.currentUser.image.webp);t.setAttribute("src",n);e.comments.forEach((function(e){const t=e.user.image.webp,n=e.user.username,o=e.content,s=e.createdAt,c=e.score,r=e.id,a=e.replies,m=new Comment(t,n,s,o,c);if(m.showComment(),m.createReply(),0!==a.length)for(const e of a){const t=document.querySelector("#comments-section").getElementsByClassName("__comment-container"),n=t[r-1],o=document.createElement("div");o.setAttribute("class","comment-reply"),o.setAttribute("id","reply-section"),n.appendChild(o);const s=e.user.image.webp,c=e.user.username,a=e.content,m=e.createdAt,l=e.score,i=new Reply(s,c,m,a,l,t);i.showReply(),i.reply()}}))}document.addEventListener("DOMContentLoaded",displayComments);class Comment{constructor(e,t,n,o,s,c){this.avatar=e,this.username=t,this.commentDate=n,this.comment=o,this.score=s,this.commentContainer=c}postComment(){return`\n            <div class="__comment-container">\n                <div class="__comment">\n                    <div class="__comment__info">\n                        <span class="__comment__avatar">\n                            <img src=${this.avatar} alt="User Avatar">\n                        </span>\n                        <span class="__comment__username">${this.username}</span>\n                        <span class="__comment__date">${this.commentDate}</span>\n                    </div>\n                    <p class="__comment__content">${this.comment}</p>\n                    \n                        <div class="__command__vote--btn --btn">\n                            <button class="up-vote vote--btn">\n                                <i class="fa-solid fa-plus"></i>\n                            </button>\n                            <span class="vote-count">${this.score}</span>\n                            <button class="down-vote vote--btn">\n                                <i class="fa-solid fa-minus"></i>\n                            </button>\n                        </div>\n                        <button class="__command__reply--btn reply--btn --btn">\n                            <i class="fa-solid fa-reply"></i>\n                            Reply\n                        </button>\n                   \n                </div>\n            </div>\n        `}showComment(){document.querySelector("#comments-section").innerHTML=displayComment(this.postComment())}createReply(){const e=document.querySelectorAll(".__command__reply--btn"),t=document.querySelector(".new-comment");document.querySelectorAll(".__comment-container");e.forEach((e=>{screen.width;e.addEventListener("click",(function(n){if(n.target===e&&screen.width<=768)t.classList.toggle("reply-box");else if(n.target===e&&screen.width>768)for(let e=1;3!=e;e++){const o=t.cloneNode(!0),s=n.target.parentNode.parentNode,c=n.target.parentNode.parentNode;s===c&&(s.insertBefore(o,s.children[e]),console.log(n.target.parentNode.parentNode))}}))})),window.addEventListener("scroll",(function(e){const n=document.documentElement.scrollHeight-window.innerHeight,o=window.scrollY;Math.ceil(o)===n&&t.classList.remove("reply-box")}))}}class Reply extends Comment{constructor(e,t,n,o,s,c){super(e,t,n,o,s,c)}showReply(){document.querySelector("#reply-section").innerHTML=displayReply(this.postComment())}reply(){this.createReply()}}const displayComment=function(e){let t="";return function(e){return t+=e}}(),displayReply=function(e){let t="";return function(e){return t+=e}}();